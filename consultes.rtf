{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 1 - db.restaurants.find().pretty()\
2 - db.restaurants.find(\{\}, \{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 \})\
3 - db.restaurants.find(\{\}, \{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 \})\
4 - db.restaurants.find(\{\}, \{ restaurant_id: 1, name: 1, borough: 1, "address.zipcode": 1, _id: 0 \})\
5 - db.restaurants.find(\{ borough: "Bronx" \})\
6 - db.restaurants.find(\{ borough: "Bronx" \}).limit(5)\
7 - db.restaurants.find(\{ borough: "Bronx" \}).skip(5).limit(5)\
8 - db.restaurants.find(\{ "grades.score": \{ $gt: 90 \} \})\
9 - db.restaurants.find(\{ "grades.score": \{ $gt: 80, $lt: 100 \} \})\
10-db.restaurants.find(\{ "address.coord.0": \{ $lt: -95.754168 \} \})\
\
11-db.restaurants.find(\{\
  cuisine: \{ $ne: "American" \},\
  "grades.score": \{ $gt: 70 \},\
  "address.coord.0": \{ $lt: -65.754168 \}\
\})\
\
12-db.restaurants.find(\{\
  cuisine: \{ $ne: "American" \},\
  "grades.score": \{ $gt: 70 \},\
  "address.coord.0": \{ $lt: -65.754168 \}\
\})\
\
13-db.restaurants.find(\
  \{\
    cuisine: \{ $ne: "American" \},\
    "grades.grade": "A",\
    borough: \{ $ne: "Brooklyn" \}\
  \}\
).sort(\{ cuisine: -1 \})\
\
14-db.restaurants.find(\
  \{ name: \{ $regex: /^Wil/, $options: "i" \} \},\
  \{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 \}\
)\
\
15-db.restaurants.find(\
  \{ name: \{ $regex: /ces$/, $options: "i" \} \},\
  \{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 \}\
)\
\
16-db.restaurants.find(\
  \{ name: \{ $regex: /Reg/, $options: "i" \} \},\
  \{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 \}\
)\
\
17-db.restaurants.find(\{\
  borough: "Bronx",\
  cuisine: \{ $in: ["American", "Chinese"] \}\
\})\
\
18-db.restaurants.find(\
  \{\
    borough: \{ $in: ["Staten Island", "Queens", "Bronx", "Brooklyn"] \}\
  \},\
  \{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 \}\
)\
\
19-db.restaurants.find(\
  \{\
    borough: \{ $nin: ["Staten Island", "Queens", "Bronx", "Brooklyn"] \}\
  \},\
  \{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 \}\
)\
\
20-db.restaurants.find(\
  \{\
    "grades.score": \{ $lte: 10 \}\
  \},\
  \{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 \}\
)\
\
21-db.restaurants.find(\
  \{\
    $or: [\
      \{\
        cuisine: \{ $ne: "American", $ne: "Chinese" \},\
        cuisine: /Fish/i\
      \},\
      \{ name: \{ $regex: /^Wil/, $options: "i" \} \}\
    ]\
  \},\
  \{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 \}\
)\
\
22-db.restaurants.find(\
  \{\
    "grades": \{\
      $elemMatch: \{\
        grade: "A",\
        score: 11,\
        date: ISODate("2014-08-11T00:00:00Z")\
      \}\
    \}\
  \},\
  \{ restaurant_id: 1, name: 1, grades: 1, _id: 0 \}\
)\
\
23-db.restaurants.find(\
  \{\
    "grades.1": \{\
      grade: "A",\
      score: 9,\
      date: ISODate("2014-08-11T00:00:00Z")\
    \}\
  \},\
  \{ restaurant_id: 1, name: 1, grades: 1, _id: 0 \}\
)\
\
24-db.restaurants.find(\
  \{\
    "address.coord.1": \{ $gt: 42, $lte: 52 \}\
  \},\
  \{ restaurant_id: 1, name: 1, "address": 1, "address.coord": 1, _id: 0 \}\
)\
\
25-db.restaurants.find().sort(\{ name: 1 \})\
26-db.restaurants.find().sort(\{ name: -1 \})\
27-db.restaurants.find().sort(\{ cuisine: 1, borough: -1 \})\
\
28-db.restaurants.find(\
  \{ "address.street": \{ $exists: false \} \},\
  \{ restaurant_id: 1, name: 1, address: 1, _id: 0 \}\
)\
\
29-db.restaurants.find(\
  \{ "address.coord": \{ $type: "double" \} \}\
)\
\
30-db.restaurants.find(\
  \{\
    "grades.score": \{ $mod: [7, 0] \}\
  \},\
  \{\
    restaurant_id: 1,\
    name: 1,\
    grades: 1,\
    _id: 0\
  \}\
)\
\
31-db.restaurants.find(\
  \{ name: \{ $regex: /mon/i \} \},\
  \{\
    name: 1,\
    borough: 1,\
    "address.coord.0": 1, // Longitud\
    "address.coord.1": 1, // Latitud\
    cuisine: 1,\
    _id: 0\
  \}\
)\
\
32-db.restaurants.find(\
  \{ name: \{ $regex: /^Mad/, $options: "i" \} \},\
  \{\
    name: 1,\
    borough: 1,\
    "address.coord.0": 1, // Longitud\
    "address.coord.1": 1, // Latitud\
    cuisine: 1,\
    _id: 0\
  \}\
)\
}
